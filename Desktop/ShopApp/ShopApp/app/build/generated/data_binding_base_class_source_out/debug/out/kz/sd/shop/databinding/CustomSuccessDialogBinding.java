// Generated by view binder compiler. Do not edit!
package kz.sd.shop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.airbnb.lottie.LottieAnimationView;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kz.sd.shop.R;

public final class CustomSuccessDialogBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final LottieAnimationView animation;

  @NonNull
  public final TextView content;

  @NonNull
  public final MaterialButton okBtn;

  @NonNull
  public final TextView title;

  private CustomSuccessDialogBinding(@NonNull View rootView, @NonNull LottieAnimationView animation,
      @NonNull TextView content, @NonNull MaterialButton okBtn, @NonNull TextView title) {
    this.rootView = rootView;
    this.animation = animation;
    this.content = content;
    this.okBtn = okBtn;
    this.title = title;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomSuccessDialogBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.custom_success_dialog, parent);
    return bind(parent);
  }

  @NonNull
  public static CustomSuccessDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.animation;
      LottieAnimationView animation = ViewBindings.findChildViewById(rootView, id);
      if (animation == null) {
        break missingId;
      }

      id = R.id.content;
      TextView content = ViewBindings.findChildViewById(rootView, id);
      if (content == null) {
        break missingId;
      }

      id = R.id.ok_btn;
      MaterialButton okBtn = ViewBindings.findChildViewById(rootView, id);
      if (okBtn == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new CustomSuccessDialogBinding(rootView, animation, content, okBtn, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
